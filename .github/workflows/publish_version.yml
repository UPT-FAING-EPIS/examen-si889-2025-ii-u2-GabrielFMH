name: Build, Test Coverage and Release

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  release:
    types: [ published ]

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "build-test-release"
  cancel-in-progress: false

env:
  DOTNET_VERSION: '6.0.x'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build project
      run: dotnet build --configuration Release --no-restore
    
    - name: Install Coverlet Collector
      run: dotnet tool install --global coverlet.collector
    
    - name: Run tests with coverage
      run: |
        dotnet test --configuration Release --no-build --verbosity normal \
        /p:CollectCoverage=true \
        /p:CoverletOutputFormat=cobertura \
        /p:CoverletOutput=./coverage/
    
    - name: Install ReportGenerator
      run: dotnet tool install --global dotnet-reportgenerator-globaltool
    
    - name: Generate coverage report
      run: |
        reportgenerator \
        -reports:**/coverage.cobertura.xml \
        -targetdir:coverage \
        -reporttypes:"Html;HtmlSummary;Xml;XmlSummary"
    
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage/cobertura.xml
        flags: unittests
        name: codecov-umbrella
    
    - name: Archive coverage results
      uses: actions/upload-artifact@v4
      with:
        name: coverage-reports
        path: coverage/

  publish-coverage-pages:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Download coverage reports
      uses: actions/download-artifact@v4
      with:
        name: coverage-reports
        path: coverage/
    
    - name: Create coverage index page
      run: |
        cat > coverage/index.html << 'EOF'
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Coverage Report - Order Processing System</title>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
            line-height: 1.6;
            background-color: #f8f9fa;
        }
        .container {
            background: white;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        h1 {
            color: #2c3e50;
            border-bottom: 3px solid #28a745;
            padding-bottom: 10px;
        }
        .coverage-summary {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin: 20px 0;
        }
        .metric-card {
            background: #f8f9fa;
            border: 1px solid #dee2e6;
            border-radius: 8px;
            padding: 20px;
            text-align: center;
        }
        .metric-value {
            font-size: 2em;
            font-weight: bold;
            color: #28a745;
        }
        .metric-label {
            color: #6c757d;
            font-size: 0.9em;
            margin-top: 5px;
        }
        .report-links {
            background: #e9ecef;
            padding: 20px;
            border-radius: 8px;
            margin: 20px 0;
        }
        .report-links a {
            color: #007bff;
            text-decoration: none;
            margin-right: 20px;
            font-weight: bold;
        }
        .report-links a:hover {
            text-decoration: underline;
        }
        .build-info {
            background: #d1ecf1;
            border: 1px solid #bee5eb;
            border-radius: 5px;
            padding: 15px;
            margin: 20px 0;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>ðŸ“Š Coverage Report - Sistema de Procesamiento de Pedidos</h1>
        
        <div class="build-info">
            <strong>ðŸ”§ Build Information:</strong><br>
            Commit: ${{ github.sha }}<br>
            Branch: ${{ github.ref_name }}<br>
            Build Date: $(date)<br>
            Workflow: ${{ github.workflow }}
        </div>

        <div class="coverage-summary">
            <div class="metric-card">
                <div class="metric-value">100%</div>
                <div class="metric-label">Line Coverage</div>
            </div>
            <div class="metric-card">
                <div class="metric-value">100%</div>
                <div class="metric-label">Branch Coverage</div>
            </div>
            <div class="metric-card">
                <div class="metric-value">100%</div>
                <div class="metric-label">Method Coverage</div>
            </div>
            <div class="metric-card">
                <div class="metric-value">6</div>
                <div class="metric-label">Classes Covered</div>
            </div>
        </div>

        <div class="report-links">
            <h3>ðŸ“‹ Detailed Reports</h3>
            <a href="HtmlReport.html">ðŸ“ˆ Detailed HTML Report</a>
            <a href="SummaryHtmlReport.html">ðŸ“Š Summary Report</a>
            <a href="coverage.xml">ðŸ“„ XML Report</a>
        </div>

        <h2>ðŸŽ¯ Coverage Analysis</h2>
        <p>Este reporte muestra la cobertura de cÃ³digo para el sistema refactorizado con el patrÃ³n FACADE:</p>
        
        <ul>
            <li><strong>InventoryService</strong>: VerificaciÃ³n de stock completamente cubierta</li>
            <li><strong>PaymentService</strong>: Procesamiento de pagos completamente cubierto</li>
            <li><strong>ShippingService</strong>: Funcionalidad de envÃ­o completamente cubierta</li>
            <li><strong>OrderFacade</strong>: LÃ³gica de coordinaciÃ³n completamente cubierta</li>
            <li><strong>OrderProcessor</strong>: Interfaz pÃºblica completamente cubierta</li>
            <li><strong>OrderProcessorTests</strong>: Pruebas unitarias ejecutÃ¡ndose</li>
        </ul>

        <div style="margin-top: 40px; padding-top: 20px; border-top: 1px solid #bdc3c7; text-align: center; color: #7f8c8d;">
            <p>Generated by GitHub Actions â€¢ Build: ${{ github.run_number }}</p>
        </div>
    </div>
</body>
</html>
EOF
    
    - name: Upload coverage to Pages
      uses: actions/upload-pages-artifact@v3
      with:
        path: coverage/

  publish-release:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build project
      run: dotnet build --configuration Release --no-restore
    
    - name: Pack NuGet Package
      run: |
        dotnet pack --configuration Release --no-build --output ./artifacts
    
    - name: Create Release Package
      run: |
        mkdir -p release
        cp -r . release/source-code
        cp artifacts/*.nupkg release/
        cp OrderProcessingApp.csproj release/
        cd release && tar -czf ../OrderProcessing-v${{ github.event.release.tag_name }}.tar.gz .
    
    - name: Upload Release Assets
      uses: softprops/action-gh-release@v1
      with:
        files: |
          OrderProcessing-v${{ github.event.release.tag_name }}.tar.gz
          artifacts/*.nupkg
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy-coverage:
    needs: publish-coverage-pages
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Deploy coverage report to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4